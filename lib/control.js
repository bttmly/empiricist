// Generated by CoffeeScript 1.9.2
var Control, Observation,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Observation = require("./").Observation;

Control = (function(superClass) {
  extend(Control, superClass);

  function Control(_experiment, fn, context, args) {
    this._experiment = _experiment;
    Control.__super__.constructor.call(this, fn, context, args);
  }

  return Control;

})(Observation);

module.exports = Control;

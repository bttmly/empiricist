// Generated by CoffeeScript 1.9.2
var AsyncCandidate, AsyncControl, AsyncExperiment, Experiment, ref,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ref = require("./"), Experiment = ref.Experiment, AsyncControl = ref.AsyncControl, AsyncCandidate = ref.AsyncCandidate;

AsyncExperiment = (function(superClass) {
  extend(AsyncExperiment, superClass);

  function AsyncExperiment(name, init) {
    if (!(self instanceof AsyncExperiment)) {
      return new AsyncExperiment(name, init);
    }
    AsyncExperiment.__super__.constructor.apply(this, arguments);
  }

  return AsyncExperiment;

})(Experiment);

module.exports = AsyncExperiment;

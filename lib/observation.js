// Generated by CoffeeScript 1.9.2
var Observation,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Observation = (function() {
  function Observation(fn, context, args) {
    this.clean = bind(this.clean, this);
    this.result = bind(this.result, this);
    this.call = bind(this.call, this);
    this._fn = fn;
    this._args = args;
    this._context = context;
  }

  Observation.prototype.call = function() {
    this._start = Date.now();
    this._result = this._fn.apply(this._context, this._args);
    this._end = Date.now();
    this._duration = this._start - this._end;
    return this._result;
  };

  Observation.prototype.result = function() {
    return this._result;
  };

  Observation.prototype.clean = function(fn) {
    this._result = fn(this._result);
    return this;
  };

  return Observation;

})();

module.exports = Observation;
